{"version":3,"sources":["components/navigation/Navbar.js","components/navigation/Footer.js","components/input/Graph.js","components/services/AuthService.js","components/auth/Signup.js","components/auth/Login.js","components/panels/Entry.js","components/panels/Entries.js","components/panels/ListDisplay.js","components/services/EntriesService.js","components/panels/Home.js","components/panels/Journal.js","components/input/TextEditor.js","components/input/GraphEditor.js","components/input/PostCreator.js","components/input/ResearchCreator.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLogout","e","logout","state","loggedInUser","nextProps","setState","objectSpread","react_default","a","createElement","className","Link","to","href","onClick","username","Component","Footer","Chart","AuthService","_AuthService","signup","password","service","post","then","response","data","login","loggedin","get","axios","create","baseURL","process","withCredentials","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","_this2","onSubmit","type","onChange","Login","Graph","require","Line","Bar","Pie","Doughnut","split","map","string","Number","chartData","labels","CSV","fromCSV_toLabels","datasets","label","fillColor","strokeColor","borderWidth","options","scales","yAxes","gridLines","display","color","lineWidth","ticks","beginAtZero","width","height","Entry","rawData","block","i","input_Graph","key","dangerouslySetInnerHTML","__html","Entries","entries","entry","panels_Entry","ListDisplay","posts","researchArray","research","date","updated_at","slice","field","displaying","branchThisResearch","panels_Entries","EntriesService","_EntriesService","createNewResearch","researchName","getUserPosts","getRandomPosts","saveEntryInResearch","createBranchedResearch","Home","createBranchOfResearch","panels_ListDisplay","Journal","message","id","TextEditor","submitText","saveText","stateToHTML","editorState","getCurrentContent","EditorState","createEmpty","RichUtils","toggleInlineStyle","Draft","_textBold","bind","_textItalic","_textUnderlined","_textCode","React","GraphEditor","changeGraphType","submitGraph","changeGraphAxis","axis","unshift","saveGraph","caption","PostCreator","getResearchs","researchs","forEach","push","updateEntryName","entryName","addEditor","editor","editorsArray","editorsInPage","deleteEditor","index","diminishedArray","splice","storeContentFromEditor","editors","newEditor","sendPostToDB","selectedResearch","alert","htmlFor","defaultValue","input_TextEditor","input_GraphEditor","ResearchCreator","context","updateResearchName","newValue","updateField","createResearch","createdResearch","App","getTheUser","userObj","err","_this3","fetchUser","navigation_Navbar","userInSession","Switch","Route","exact","path","render","panels_Home","panels_Journal","input_PostCreator","input_ResearchCreator","navigation_Footer","auth_Signup","auth_Login","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.260a538d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    \n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] })\n  }\n\n  handleLogout = (e) => {\n    this.props.logout()\n  }\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <ul>\n            <li><Link to='/'>Home</Link></li>\n            <li><Link to='/journal'>Journal</Link></li>\n            <li><a href=\"/\" onClick={this.handleLogout}>Logout</a></li>\n            <span>Welcome, {this.state.loggedInUser.username}</span>\n          </ul>\n\n        </nav>\n      )\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul>\n              <li><Link to='/'>Home</Link></li>\n              <li><Link to='/login'>Login</Link></li>\n              <li><Link to='/signup'>Sign up</Link></li>\n            </ul>\n          </nav>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Navbar;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction Footer(props) {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"linksNavbar\">\n        <Link to='/about'>About</Link>\n        <span>|</span>\n        <a href=\"/\">Facebook</a>\n        <span>|</span>\n        <a href=\"/\">Twitter</a>\n        <span>|</span>\n        <a href=\"/\">Instagram</a>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\nlet Chart;\n\n\nfunction Graph(props) {\n\n  if (props.type === \"Line\") {\n    Chart = require(\"react-chartjs\").Line;\n  } else if (props.type === \"Bar\") {\n    Chart = require(\"react-chartjs\").Bar;\n  } else if (props.type === \"Pie\") {\n    Chart = require(\"react-chartjs\").Pie;\n  } else {\n    Chart = require(\"react-chartjs\").Doughnut;\n  }\n  const data = fromCSV_ToData(props.data); //y axis\n  const labels = fromCSV_toLabels(props.labels); //x axis \n\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: \"\",\n      data: data,\n      fillColor: 'rgba(255, 255, 255, 0.2)',\n      strokeColor:'rgb(255, 255, 255)',\n      borderWidth: 1\n    }]\n  }\n  const chartOptions = {\n    scales: {\n      yAxes: [{\n        gridLines:{\n          display: true,\n          color:'rgb(255, 255, 255)',\n        lineWidth:1\n      },\n        ticks: {\n          beginAtZero: false\n        }\n      }]\n    }\n  }\n  return <Chart data={chartData} options={chartOptions} width=\"600\" height=\"250\" />\n}\n\nfunction fromCSV_ToData(CSV) {\n  const rawDataArray = CSV.split(\",\");\n  const data = rawDataArray.map((string) => {\n    return Number(string)\n  })\n  return data\n}\n\nfunction fromCSV_toLabels(CSV) {\n  return CSV.split(\",\")\n}\n\nexport default Graph;\n\n","import axios from 'axios';\n\nclass _AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL + '/auth',\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentuser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nconst AuthService = new _AuthService();\nexport default AuthService;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '../services/AuthService'\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    AuthService.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        this.props.getUser(response.user)\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div className=\"dark-background\">\n        <h3>Sign up to start publishing!</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '../services/AuthService'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    AuthService.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (\n    <div className=\"dark-background\">\n      <h3>Login</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport Graph from '../input/Graph'\n\nconst Entry = (props) => {\n  return (\n    <div>\n      {props.rawData.map((block, i) => {\n        if (block.type === \"graph\") {\n          return (\n           <Graph key={i} type={block.data[0]} labels={block.data[1]} data={block.data[2]} />\n          )\n        } else {\n          return (\n            <div key={i} dangerouslySetInnerHTML={{ __html: block.data }} />)\n        }\n      })}\n    </div>\n  )\n}\n\nexport default Entry;\n\n ","import React from 'react';\nimport Entry from './Entry'\n\nconst Entries = (props) => {\n\n  return (\n    <div className=\"entries-wrapper\">\n      {props.entries.map((entry, i) => {\n        return (\n          <div key={i}>\n            <h3 className=\"entry-name\">Entry name: {entry.name}</h3>\n            <Entry key={entry.name} rawData={entry.data} />\n          </div>\n        )\n      })}\n    </div>\n  )\n\n}\n\n\nexport default Entries;","import React from 'react';\nimport Entries from './Entries';\nimport { Link } from 'react-router-dom';\n\nconst ListDisplay = (props) => {\n  if (props.posts) {\n    const researchArray = props.posts\n    return (\n      <div>\n        {researchArray.map((research, i) => {\n          console.log(research)\n          const date = research.updated_at.slice(0, 10);\n          return (\n            <div key={i}>\n              <div className=\"research-block\">\n                <h2>Research Line: {research.name}</h2>\n                <span>Field: {research.field}</span>\n                <h4>Last update: {date}</h4>\n                {(props.displaying === \"home\") ?\n                  <Link to='/journal'><button onClick={() => { props.branchThisResearch(research.name, research.field) }}>Branch this research</button></Link>\n                  : null}\n              </div>\n              <Entries key={research.name} entries={research.entries} />\n            </div>\n          )\n        })}\n      </div>\n    )\n\n  } else {\n    return (\n      <div>\n        <div>Displaying: {props.displaying}</div>\n        <h1>Loading...</h1>\n      </div>\n    )\n  }\n\n}\n\n\nexport default ListDisplay;","import axios from 'axios';\n\nclass _EntriesService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL + '/research',\n      withCredentials: true\n    });\n  }\n\n  createNewResearch = (researchName, field) => {\n    return this.service.post('/newresearch', { researchName, field })\n      .then((data) => {\n        console.log(data)\n        return data;\n      })\n  }\n\n  getUserPosts = (username) => {\n    return this.service.get('/userentries', { username })\n      .then((data) => {\n        return data;\n      })\n  }\n\n  getRandomPosts = () => {\n    return this.service.get('/randomposts')\n      .then((data) => {\n        return data\n      })\n  }\n\n  saveEntryInResearch = (researchName, entry) => {\n    return this.service.post('/saveentry', { researchName, entry }) //research name is already in the entry\n      .then((data) => console.log(data));\n  }\n\n  createBranchedResearch = (researchName, field) => {\n    return this.service.post('/branchresearch', { researchName, field })\n      .then((data) => {\n        console.log(data)\n        return data;\n      })\n  }\n}\n\nconst EntriesService = new _EntriesService();\nexport default EntriesService;","import React, { Component } from 'react';\nimport ListDisplay from './ListDisplay'\nimport EntriesService from '../services/EntriesService';\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: props.loggedInUser,\n      posts: \"\"\n    };\n    this.getRandomPosts();\n  }\n\n  createBranchOfResearch = (researchName, field) => {\n    EntriesService.createBranchedResearch(researchName, field);\n  }\n\n  getRandomPosts = () => {\n    console.log(\"getRandomPosts call\")\n    EntriesService.getRandomPosts()\n      .then((data) => {\n        this.setState({ posts: data.data })\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"dark-background\">\n        <div className=\"entries-container\">\n          <ListDisplay displaying=\"home\" posts={this.state.posts} branchThisResearch={this.createBranchOfResearch} />\n        </div>\n      </div>\n    )\n  }\n\n}\nexport default Home;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ListDisplay from './ListDisplay';\nimport EntriesService from '../services/EntriesService';\n\nclass Journal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: props.loggedInUser,\n      posts: \"\"\n    };\n    this.getUserPosts();\n  }\n\n  //return all research lines with all user's posts inside\n  getUserPosts = () => {\n    console.log(\"getUserPosts call\");\n    EntriesService.getUserPosts()\n      .then((data) => {\n        this.setState({ posts: data.data });\n        return data.data;\n      })\n  }\n\n  createBranchOfResearch = (researchName, field) => {\n    EntriesService.createBranchedResearch(researchName, field);\n  }\n\n  render() {\n    return (\n      <div className=\"dark-background\">\n      {(this.props.message) ? <div className=\"message journal-message\">{this.props.message}</div>: null}\n        <div className=\"entries-container\">\n          <Link to=\"/newentry\"><button id=\"new-entry-button\">New Entry</button></Link>\n          <Link to=\"/newresearch\"><button id=\"new-entry-button\">New Research</button></Link>\n          <ListDisplay displaying=\"journal\" posts={this.state.posts} branchThisResearch={this.createBranchOfResearch}/>\n        </div>\n      </div>\n    )\n  }\n\n}\nexport default Journal;","import React from 'react';\nimport { Editor, EditorState, RichUtils } from 'draft-js';\nimport { stateToHTML } from 'draft-js-export-html'\n\n\n\nclass TextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editorState: EditorState.createEmpty() };\n    this.onChange = (editorState) => {\n      this.setState({ editorState });\n      this.submitText()\n    }\n  }\n\n  \n  _textBold() {\n    this.onChange(RichUtils.toggleInlineStyle(\n      this.state.editorState,\n      'BOLD'\n      ));\n    }\n    _textItalic() {\n      this.onChange(RichUtils.toggleInlineStyle(\n        this.state.editorState,\n        'ITALIC'\n        ));\n      }\n      _textUnderlined() {\n        this.onChange(RichUtils.toggleInlineStyle(\n          this.state.editorState,\n          'UNDERLINE'\n          ));\n        }\n        _textCode() {\n          this.onChange(RichUtils.toggleInlineStyle(\n            this.state.editorState,\n            'CODE'\n            ));\n          }\n          \n          submitText = () => {\n            this.props.saveText(stateToHTML(this.state.editorState.getCurrentContent()),this.props.id)\n          }\n\n    render() {\n      return (\n        <div className=\"editor-wrapper\">\n          <div className=\"editor\">\n            <Editor\n              editorState={this.state.editorState}\n              onChange={this.onChange}\n            />\n          </div>\n\n          <div className=\"buttons-wrapper\">\n            <button onClick={this._textBold.bind(this)}><b>Bold</b></button>\n            <button onClick={this._textItalic.bind(this)}><i>Italic</i></button>\n            <button onClick={this._textUnderlined.bind(this)}><u>Underline</u></button>\n            <button onClick={this._textCode.bind(this)}><code>Code</code></button>\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default TextEditor;","import React, { Component } from 'react';\nimport Graph from './Graph'\n\nclass GraphEditor extends Component {\n  constructor() {\n    super();\n    this.state = {\n      type: \"Line\",\n      labels: \"\",\n      data: \"\",\n      caption: \"\"\n    }\n\n  }\n\n  changeGraphType = (e) => {\n    const type = e.target.value;\n    this.setState({ type }, () => {\n      this.submitGraph();\n    });\n  }\n\n  changeGraphAxis = (e, axis) => {\n    if (axis === \"X\") {\n      this.setState({ labels: e.target.value }, () => {\n        this.submitGraph();\n      });\n    } else if (axis === \"Y\") {\n      this.setState({ data: e.target.value }, () => {\n        this.submitGraph();\n      });\n    }\n\n  }\n\n  submitGraph = () => {\n    const rawData = [];\n    rawData.unshift(this.state.type, this.state.labels, this.state.data);\n    this.props.saveGraph(rawData, this.props.id);\n  }\n\n  render() {\n    return (\n      <div className=\"graph-container\">\n        <Graph type={this.state.type} data={this.state.data} labels={this.state.labels} />\n        <div className=\"graph-options\">\n          <select onChange={(e) => { this.changeGraphType(e) }}>\n            <option value=\"Line\">Line</option>\n            <option value=\"Bar\">Bar</option>\n            {/* <option value=\"Pie\">Pie</option>\n            <option value=\"Doughnut\">Doughnut</option> */}\n          </select>\n          <fieldset>\n            <div className=\"graph-labels\">\n              <label>Dataset for X axis:</label>\n              <label>Dataset for Y axis:</label>\n            </div>\n            <div>\n              <textarea onChange={(e) => { this.changeGraphAxis(e, \"X\") }} />\n              <textarea onChange={(e) => { this.changeGraphAxis(e, \"Y\") }} />\n            </div>\n          </fieldset>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GraphEditor;","import React from 'react';\nimport TextEditor from './TextEditor';\nimport GraphEditor from './GraphEditor';\nimport EntriesService from '../services/EntriesService';\n\n\nclass PostCreator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      researchs: [],\n      selectedResearch: \"\",\n      entryName: \"\",\n      editorsInPage: []\n    }\n    \n    this.getResearchs();\n  }\n\n  getResearchs = () => {\n    const researchs = [];\n    EntriesService.getUserPosts()\n      .then((data) => {\n        data.data.forEach((research) => {\n          researchs.push(research.name)\n        })\n        this.setState({ researchs: researchs })\n      })\n  }\n\n  updateEntryName = (e) => {\n    this.setState({entryName:e.target.value})\n  }\n\n  addEditor = (type) => {\n    const editorsArray = this.state.editorsInPage\n    let editor;\n    if (type===\"text\"){\n      editor = {type, data:\"\"};\n    } else {\n      editor = {type, data:[]};\n    }\n    editorsArray.push(editor);\n    this.setState({ editorsInPage: editorsArray }, ()=>{\n      console.log(\"editor added to state. Editors in page:\" + this.state.editorsInPage)\n    })\n  }\n\n  deleteEditor = (index) => {\n    const diminishedArray = this.state.editorsInPage;\n    diminishedArray.splice(index, 1);\n    this.setState({ editorsInPage: diminishedArray });\n  }\n\n  storeContentFromEditor = (data, id) => {\n    const editors = this.state.editorsInPage;\n    const oldEditor = this.state.editorsInPage[id];\n    const newEditor = {type: oldEditor.type, data }\n    editors.splice(id, 1, newEditor)\n    this.setState({ editorsInPage: editors });\n    console.log(data) //<----- BUG HERE: lacks the last character written\n  }\n\n  sendPostToDB = () => {\n    // DB format for entry == {name: , data:}\n    if (!this.state.selectedResearch) {\n      alert(\"Select a research before saving your post :)\");\n      return;\n    } else if (!this.state.entryName) {\n      alert(\"Choose a name for your entry before submiting! :)\");\n      return;\n    }\n    const name = this.state.selectedResearch;\n    const data = { name: this.state.entryName, data: this.state.editorsInPage }\n    EntriesService.saveEntryInResearch(name, data);\n    console.log(name, data)\n  }\n\n  render() {\n\n    if (this.state.researchs) {\n      return (\n\n        <div className=\"input-components-container\">\n          <div className=\"creator-header\">\n            <h2>New Entry</h2>\n            <fieldset>\n              <label htmlFor=\"entry-name\">Title: </label>\n              <input id=\"entry-name\" type=\"text\" onChange={(e)=>this.updateEntryName(e)} />\n              <label htmlFor=\"research\">Associated research: </label>\n              <select id=\"research\" onChange={(e) => { this.setState({ selectedResearch: e.target.value }) }}>\n                <option value=\"\" defaultValue>Select one--</option>\n                {this.state.researchs.map((research) => { return (<option value={research}>{research}</option>) })}\n              </select>\n              <button onClick={this.sendPostToDB}>Save and publish</button>\n            </fieldset>\n          </div>\n\n          <div className=\"items-panel\">\n            <button className=\"create-editor\" onClick={() => { this.addEditor(\"text\") }}>New Text Editor</button>\n            <button className=\"create-editor\" onClick={() => { this.addEditor(\"graph\") }}>New Graph Editor</button>\n            <div>\n              {\n                this.state.editorsInPage.map((editor, index) => {\n                  return (\n                    <div>\n                      <span>Editor {index + 1}: {editor.type}</span>\n                      <button className=\"delete-editor\" onClick={() => { this.deleteEditor(index) }}>X</button>\n                    </div>\n                  )\n                })\n              }\n            </div>\n          </div>\n\n          <div>\n            {\n              this.state.editorsInPage.map((editor, index) => {\n                if (editor.type === \"text\") {\n                  return (\n                    <TextEditor saveText={this.storeContentFromEditor} id={index} key={index} />\n                  )\n                } else if (editor.type === \"graph\") {\n                  return (\n                    <GraphEditor saveGraph={this.storeContentFromEditor} id={index} key={index} />\n                  );\n                }\n                return null;\n              })\n            }\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>It seems that you have no current line of work active. Create one to begin publishing!</div>\n      )\n    }\n  }\n}\n\n\nexport default PostCreator;\n\n","import React, { Component } from 'react';\nimport EntriesService from '../services/EntriesService';\n\nclass ResearchCreator extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      researchName: \"\",\n      field: \"\",\n      createdResearch: false\n    }\n  }\n\n  updateResearchName = (e) => {\n    const newValue = e.target.value;\n    this.setState({ researchName: newValue })\n  }\n\n  updateField = (e) => {\n    const newValue = e.target.value;\n    this.setState({ field: newValue }, () => {\n      console.log(newValue)\n    })\n  }\n\n  createResearch = () => {\n    if (!this.state.researchName) {\n      alert(\"Please, fill the name of your research! :)\")\n      return\n    }\n    EntriesService.createNewResearch(this.state.researchName, this.state.field)\n    .then(()=>{\n      this.setState({\n        researchName: \"\",\n        field: \"\",\n        createdResearch: true\n      })\n    })\n  }\n\n  render() {\n    return (<div>\n\n      {this.state.createdResearch ?\n\n<div className=\"input-components-container\">\n        <fieldset className=\"research-creator\">\n          <h2>New Research</h2>\n          <label htmlFor=\"name\">Name of the new research line:</label>\n          <input id=\"name\" type=\"text\" onChange={(e) => { this.updateResearchName(e) }} />\n          <label htmlFor=\"tags\">Field:</label>\n          <input id=\"name\" type=\"text\" onChange={(e) => { this.updateField(e) }} />\n          <button onClick={() => this.createResearch()}>Create Research</button>\n          <div className=\"message\">Research created succesfully!</div>\n        </fieldset>\n      </div>\n\n      :\n\n      <div className=\"input-components-container\">\n        <fieldset className=\"research-creator\">\n          <h2>New Research</h2>\n          <label htmlFor=\"name\">Name of the new research line:</label>\n          <input id=\"name\" type=\"text\" onChange={(e) => { this.updateResearchName(e) }} />\n          <label htmlFor=\"tags\">Field:</label>\n          <input id=\"name\" type=\"text\" onChange={(e) => { this.updateField(e) }} />\n          <button onClick={() => this.createResearch()}>Create Research</button>\n        </fieldset>\n      </div>}\n  </div>)\n  }\n}\n\nexport default ResearchCreator;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// Navigation components\nimport Navbar from './components/navigation/Navbar';\nimport Footer from './components/navigation/Footer'\n// Login components\nimport AuthService from './components/services/AuthService';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\n// Menu components\nimport Home from './components/panels/Home'\nimport Journal from './components/panels/Journal'\n//Editors\nimport PostCreator from './components/input/PostCreator';\nimport ResearchCreator from './components/input/ResearchCreator';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { loggedInUser: null };\n  }\n\n  getTheUser = (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  logout = () => {\n    AuthService.logout()\n      .then(() => {\n        this.setState({ loggedInUser: null });\n      })\n  }\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n\n      AuthService.loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          })\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          })\n        })\n    }\n  }\n\n  render() {\n    this.fetchUser()\n\n    if (this.state.loggedInUser) {  //USER LOGGED IN ----------------\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n          </header>\n          <Switch>\n            <Route exact path='/' render={() => <Home />} />\n            <Route exact path='/journal' render={() => <Journal loggedInUser={this.state.loggedInUser} />} />\n            <Route exact path='/journal/newbranch' render={() => <Journal message=\"You just branched a research. Start contributing creating a new post.\" loggedInUser={this.state.loggedInUser} />} />\n            <Route exact path='/newentry' render={() => <PostCreator />} />\n            <Route exact path='/newresearch' render={() => <ResearchCreator />} />\n            <Route exact path='/login' render={() => <Journal message=\"Welcome to your journal\" loggedInUser={this.state.loggedInUser} />} />\n            </Switch>\n            <Footer />\n        </div>\n          );\n    } else { //USER NOT LOGGED IN ----------------\n      return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n            </header>\n            <Switch>\n              <Route exact path='/' render={() => <Home loggedInUser={false} />} />\n              <Route exact path='/signup' render={() => <Signup getUser={this.getTheUser} />} />\n              <Route exact path='/login' render={() => <Login getUser={this.getTheUser} />} />\n            </Switch>\n            <Footer />\n          </div>\n          );\n        }\n      }\n    }\n    \nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}